---
output:
  pdf_document:
    latex_engine: xelatex
    number_sections: false
geometry: landscape, margin=0.5in
fontsize: 11pt
---

```{r setup, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(dplyr)
library(gt)
library(readr)
library(gt)
library(gtExtras)

# Import csv for the starting pitcher to make the report on
Pitcher <- read_csv("StartingPitcher.csv")

# Add strike zone binary
Pitcher %>% mutate(kzone = ifelse(c(PlateLocSide >= -0.83083 & PlateLocSide <= 0.83083 & 
                                      PlateLocHeight >= 1.5 & PlateLocHeight <= 3.5), 1, 0))

# Defining pitch type coloring
TMcolors <- c("4-Seam Fastball" = "#8E8E8E",
              "Fastball" = "#8E8E8E",
              "Cutter" = "purple",
              "Sinker" = "#E50E00",
              "Slider" = "#4595FF",
              "Sweeper" = "#6ACDE5",
              "Slurve" = "#D38B31",
              "Changeup" = "#009A09",
              "ChangeUp" = "#009A09",
              "Split-Finger" = "#11C67B",
              "Curveball" = "orange",
              "Knuckle Curve" = "orange",
              "Screwball" = "#ECE400",
              "Forkball" = "#00F9AC",
              "Knuckleball" = "aquamarine")

```




```{r plot, fig.width=5, fig.height=4, echo=FALSE, fig.align='left', warning=FALSE, out.width="100%"}

# Movement plot
Pitcher %>% ggplot(aes(HorzBreak, InducedVertBreak)) +
  geom_segment(x=-30, xend=30, y=0, yend=0, color = "black") +
  geom_segment(x=0, xend=0, y=-30, yend=30, color = "black") +
  coord_equal(xlim = c(-25, 25), ylim = c(-25, 25)) +
  geom_point(aes(fill = TaggedPitchType), shape = 21, color = "black", size = 1.8, show.legend = FALSE) +
  labs(x = "Horizontal Movement(in.)", y = "Induced Vertical Movement(in.)") +
  scale_fill_manual(values = TMcolors) + theme_light()
```
\end{minipage}
\hfill
\begin{minipage}{0.5\linewidth}
```{r Heatmaps, echo=FALSE, fig.width=7, fig.height=4, fig.align='right', warning=FALSE, message=FALSE, out.width="40%"}

Pitcher_Filtered <- Pitcher %>%
  group_by(TaggedPitchType) %>%
  filter(n() >= 20) %>%  # Add minimum pitch count
  ungroup()

Pitcher_Filtered %>%
  group_by(TaggedPitchType) %>%
  filter(n() >= 20) %>%  # Only keep pitch types with at least 20 pitches
  ungroup() %>% 
  ggplot(aes(PlateLocSide, PlateLocHeight), na.rm = TRUE) + 
  # facet_wrap(~ TaggedPitchType, nrow = 1) +
  facet_grid(TaggedPitchType ~ BatterSide) +
  # geom_density_2d_filled(na.rm = TRUE, contour_var = "ndensity", 
  #                        show.legend = FALSE, bins = 40) +
  stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE, show.legend = FALSE) +
  scale_fill_gradientn(colours = c("white", "blue", "#FF9999", "red", "darkred")) +
  coord_equal(xlim= c(-2,2), ylim = c(-0.5,5)) + 
  annotate("path", 
           x = c(-0.708, 0.708, 0.708, 0, -0.708, -0.708),
           y = c(0.15, 0.15, 0.3, 0.5, 0.3, 0.15),
           color = "black", linewidth = 0.8) +
  geom_segment(x=-0.71, xend=0.71, y=3.5, yend=3.5, col = "black", alpha = 0.5) + 
  geom_segment(x=-0.71, xend=0.71, y=1.5, yend=1.5, col = "black", alpha = 0.5) + 
  geom_segment(x=-0.71, xend=-0.71, y=1.5, yend=3.5, col = "black", alpha = 0.5) + 
  geom_segment(x=0.71, xend=0.71, y=1.5, yend=3.5, col = "black", alpha = 0.5) +
  geom_segment(x=0.236, xend=0.236, y=1.5, yend=3.5, col = "black", linetype = 5, alpha = 0.5) +
  geom_segment(x=-0.236, xend=-0.236, y=1.5, yend=3.5, col = "black", linetype = 5, alpha = 0.5) +
  geom_segment(x=0.71, xend=-0.71, y=2.167, yend=2.167, col = "black", linetype = 5, alpha = 0.5) +
  geom_segment(x=0.71, xend=-0.71, y=2.83, yend=2.83, col = "black", linetype = 5, alpha = 0.5) +
  theme_bw() +
  theme(axis.text.x = element_blank(),        # Remove x-axis tick labels
             axis.text.y = element_blank(),        # Remove y-axis tick labels
             axis.ticks.x = element_blank(),       # Remove x-axis ticks
             axis.ticks.y = element_blank(),       # Remove y-axis ticks
             axis.title.x = element_blank(),       # Remove x-axis title
             axis.title.y = element_blank())

```




```{r table, echo=FALSE, warning=FALSE, message=FALSE, results='asis'}

Pitcher_Filtered <- Pitcher %>%
  group_by(TaggedPitchType) %>%
  filter(n() >= 20) %>%  # Add minimum pitch count
  ungroup()

Pitcher_Filtered %>% mutate(kzone = ifelse(c(PlateLocSide >= -0.83083 & PlateLocSide <= 0.83083 & 
                                             PlateLocHeight >= 1.5 & PlateLocHeight <= 3.5), 1, 0)) %>%
  group_by(TaggedPitchType) %>%
  reframe(
    Count = n(),
    UsagePct = (n() / nrow(Pitcher_Filtered)),
    `Strike%` = sum(PitchCall %in% c("StrikeCalled", "StrikeSwinging", "FoulBallNotFieldable",
                                     "FoulBallFieldable", "InPlay")) / n(),
    `InZone%` = sum(kzone == 1, na.rm = TRUE) / n(),
    WhiffPct = sum(PitchCall == "StrikeSwinging") /
      sum(PitchCall %in% c("StrikeSwinging", "FoulBallNotFieldable",
                           "FoulBallFieldable", "InPlay")),
    `Chase%` = sum(kzone == 0 & PitchCall %in% c("StrikeSwinging", "FoulBallNotFieldable",
                                                 "FoulBallFieldable", "InPlay"), na.rm = TRUE) /
      sum(kzone == 0),
    Velo = round(mean(RelSpeed, na.rm = TRUE), 1),
    `Velo (max / min)` = paste(
      round(max(RelSpeed, na.rm = TRUE), 1),
      round(min(RelSpeed, na.rm = TRUE), 1),
      sep = " / "
    ),
    Spin = round(mean(SpinRate, na.rm = TRUE), 0),
    IVB = round(mean(InducedVertBreak, na.rm = TRUE), 1),
    HB = round(mean(HorzBreak, na.rm = TRUE), 1),
    VAA = round(mean(VertApprAngle, na.rm = TRUE), 1)
  ) %>%
  arrange(desc(Count)) %>%
  gt() %>%
  gt_theme_538() %>%
  fmt_percent(columns = c(UsagePct, `Strike%`, `InZone%`, WhiffPct, `Chase%`), decimals = 1) %>%
  data_color(
    columns = WhiffPct,
    colors = scales::col_quantile(
      palette = c("blue", "white", "red"),
      domain = c(0, 0.5),
      # probs = c(0, 0.5),  # custom quantile split: low, median, high
      na.color = "gray90"  # auto-scale based on data
    )
  ) %>%
  tab_options(
    table.width = pct(100),          # stretch table to full text width
    table.font.size = 14,             # reduce font size (try 8â€“10)
    data_row.padding = px(1),        # reduce row spacing
    heading.title.font.size = 14,
    heading.subtitle.font.size = 9
  )

```

